This is the README file for the Bioperl central distribution,
Version 1.0.0

# $Id$

o Getting Started
 
 Thanks for downloading this distribution!

 For tutorials see Bioperl's bptutorial.pl or the online Bioperl tutorial
 at http://www.pasteur.fr/recherche/unites/sis/formation/bioperl. For
 information on databases and Bioperl see biodatabases.pod. To look at
 example code browse the examples/ and scripts/ directories, and look at
 bioperl.pod for a descriptions of all these scripts. The bioperl.pod file
 also gives a overview of the history and purpose of Bioperl.

 For a discussion of issues in design and development please see
 biodesign.pod, recommended for those who want to contribute code. And for
 a list of OS's and versions that are known to support Bioperl see the
 PLATFORMS file.
 
 For info on installing Bioperl read on!

o About Bioperl

 Bioperl is an association of developers of public domain Perl tools
 for computational molecular biology.

 Our website http://bioperl.org provides an online resource for
 modules, scripts, and web links for developers of Perl-based software
 for life science research.

o Contact info

 Bioperl developers: bioperl-l@bioperl.org

 There's quite a variety of tools available in Bioperl, and more are
 added all the time. If the tool you're looking for isn't described in
 the documentation please write us, it could be undocumented or in process.

 Project website   : http://bioperl.org
 Project FTP server: bioperl.org (anonymous FTP ok)

 Bug reports       : http://bioperl.org/bioperl-bugs/
                     bioperl-bugs@bioperl.org

 Please send us bugs, in particular about documentation which you
 think is unclear or problems in installation. We are also very
 interested in functions which don't work the way you think they do!

 Please see the AUTHORS file for the complete list of bioperl
 developers and contributors.

o System requirements

 - Tested on all common forms of Unix, Win9X/NT/2000, Mac OS X 
   (see the PLATFORMS file for more details)

 - perl 5.004 or later *.

 - ANSI C or Gnu C compiler for XS extensions

 - LWP (libwww-perl) modules for running network BLAST analyses
   (available from CPAN http://www.perl.com/CPAN/).

 - Additional perl module and application dependencies listed at
   http://bioperl.org/Core/external.shtml and in bptutorial.pl

 - Additional information using Bioperl with MacOS can be 
   found at http://bioperl.org/Core/mac-bioperl.html

 - Additional information using Bioperl with OS X can be 
   found at http://www.tc.umn.edu/~cann0010/Bioperl_OSX_install.html

 - External programs
   Bioperl can interface with some external programs for executing
   analyses.  These include clustalw and t_coffee for Multiple
   Sequence Alignments (Bio::Tools::Run::Alignment::Clustalw and
   Bio::Tools::Run::TCoffee) and blastall,blastpgp, & bl2seq for BLAST
   analyses (Bio::Tools::Run::StandAloneBlast), and to all the
   programs in the EMBOSS suite (Bio::Factory::EMBOSS).

   Additionally Bioperl can submit and retrieve jobs from the NCBI
   Blast queue via the Bio::Tools::Run::RemoteBlast module.
  
   See the documentation for these modules for more information

 - Environment Variables

   [optional]

   Some modules which run external programs need certain environment
   variables set.  If you do not have a local copy of the specific
   executeable you do not need to set these variables.  Additionally
   the modules will attempt to locate the specific applications in
   your runtime PATH variable.  

   Setting environment variables on unix means adding a line like the
   following to your shell initialization:

   (for bash,sh)  export BLASTDIR=/data1/blast
   (for csh,tcsh) setenv BLASTDIR /data1/blast

   The environment variables include:
   Bio::Tools::Run::StandAloneBlast
   o BLASTDIR - which specifies where the NCBI blastall, blastpgp,
                bl2seq, etc.. are located.  A 'data' directory is
		assumed to be present in this dir as well where the
		blastable databases are located as well as 
		substitution matricies.
   o BLASTDB - (optional) if one does not want to locate the data dir
	       within the same dir as where the BLASTDIR variable
	       points, a BLASTDB variable can be set to point to a dir
	       where BLAST database indexes are located.
   Bio::Tools::Run::Alignment::Clustalw
   o CLUSTALDIR - points to the directory where the clustalw
                  executable is located.
   Bio::Tools::Run::Alignment::TCoffee
   o TCOFFEEDIR - points to the directory where the t_coffee
                  executable is located.
		 

 * Note that most modules will work with earlier versions of Perl. 
   The only ones that will not are Bio::SimpleAlign.pm and 
   the Bio::Index::* modules. If you don't need these modules
   and you want to install bioperl using an earlier version of Perl,
   edit the "require 5.004;" line in Makefile.PL as necessary.

o About the directory structure

 The bioperl directory structure is organised as follows:

 Bio/      - Bioperl modules  
 models/   - DIA drawing program generated OO UML for bioperl classes
 t/        - Perl built-in tests
 t/data/   - Data files used for the tests - provides good data
	     examples for those new to bioinformatics data.	     
 scripts/  - Resuable scripts that use bioperl, some organisation in 
	     attempted here (i.e. das contains das related scripts) 
 scripts/contributed - User submissions of useful scripts not necessarily 
		       integrated into bioperl.  Please see the README
		       in this directory.
 examples/ - Example code snippets

o Documentation

 The "meta" documentation can be found in the bioperl.pod file.
 This should be the starting point for you to read about what
 bioperl is, how to use it and who wrote it.

 The bptutorial.pl file is a POD formatted tutorial document 
 that contains useful information for new and existing Bioperl users.
 This file also contains a number of useful scripts that the 
 student of Bioperl may want to examine.

 Use your favorite pod2* translator turn it into the format of
 choice or view it directly via perldoc.

 For example, go 

   perldoc bioperl 
 
 or in this directory go
 
   pod2text bioperl.pod | more
 
   pod2text bptutorial.pl | more 

 pod2html, which comes with Perl, can be used to create web-browser
 navigable documentation files.

 Individual *.pm modules have their own embedded POD documentation
 as well. A complete set of hyperlinked POD, or module, documentation 
 is available at http://www.bioperl.org.  The most up-to-date 

 Remember 'perldoc' is your friend. You can use this to read any
 file containing POD formatted documentation without needing any type
 of translator.

 There is also an online course written at the Pasteur Institute. See:
 http://www.pasteur.fr/recherche/unites/sis/formation/bioperl.

 Useful documentation, in the form of example code, can also be found
 in the scripts/ and examples/ directories. The current collection
 includes scripts that run BLAST and retrieve full "Subject" sequences,
 make primers, retrieve ESTs based on tissue, align protein to nucleotide
 sequence, run GENSCAN on multiple sequences, and much more! See
 bioperl.pod for a complete listing.

o Releases
  
 Bioperl releases are always available from the website
 http://www.bioperl.org or by FTP from ftp://bioperl.org.  Each release
 is tested with the test suite and cross-tested on a number of
 different platforms.  See the PLATFORMS file for more information on a
 specific platform.  All efforts are made to release a bug-free
 package, however any known bugs in a release will be documented in the
 BUGS file.  See the Changes file for a listing of what features have
 been added or what APIs have changed between releases.

 All odd numbered point releases will be developer releases and
 even point releases are stable releases.

